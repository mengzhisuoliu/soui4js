import { IInterpolator } from "soui4/IInterpolator";
import { IObject } from "soui4/IObject";
import { SAnimatorListener } from "soui4/SAnimatorListener";
import { SAnimatorUpdateListener } from "soui4/SAnimatorUpdateListener";
import { COLORREF, ISwndContainer, int } from "soui4/Typedef";

export class IValueAnimator extends IObject{
    setDuration(duration:number):void;
    getDuration():number;
    getRepeatCount():number;
    setRepeatCount(count:number):void;
    getRepeatMode():number;
    setRepeatMode(mode:number):void;
    setInterpolator(obj:IInterpolator):void;
    getInterpolator():IInterpolator;
    start(obj:ISwndContainer):void;
    end():void;
    isRunning():boolean;
    isStarted():boolean;
    reverse():void;
    getAnimatedFraction():number;
    clone():IValueAnimator;
    getStartDelay():number;
    setStartDelay(delay:number):void;
    addUpdateListener(listener:SAnimatorUpdateListener):void;
    removeUpdateListener(listener:SAnimatorUpdateListener):void;
    removeAllUpdateListener():void;
    addListener(listener:SAnimatorListener):void;
    removeListener(listener:SAnimatorListener):void;
}

export function GetIntAnimatorValue(animator:IValueAnimator):int;
export function GetFloatAnimatorValue(animator:IValueAnimator):number;
export function GetColorAnimatorValue(animator:IValueAnimator):COLORREF;

